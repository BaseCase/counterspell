{
"version":3,
"file":"module$vendor$jsrand.js",
"lineCount":129,
"mappings":"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",
"sources":["vendor/jsrand.js"],
"sourcesContent":["shadow$provide[\"module$vendor$jsrand\"] = function(global,require,module,exports) {\n/** @format  */\n\n/*!\n * jsrand - https://github.com/DomenicoDeFelice/jsrand\n *\n * Copyright (c) 2014-2020 Domenico De Felice\n * Released under the MIT License\n *\n * @license\n */\n'use strict';\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction Srand(seed) {\n  if (seed != null) {\n    this.seed(seed);\n  } else {\n    this.randomize();\n  }\n}\n\nSrand.prototype = {};\n/**\n * Set or get (if no argument is given) the seed for the pseudo-random\n * number generator. The seed can be any float or integer number.\n */\n\nSrand.seed = Srand.prototype.seed = function (seed) {\n  if (seed == null) {\n    return this._seed;\n  } // Use only one seed (mw), mz is fixed.\n  // Must not be zero, nor 0x9068ffff.\n\n\n  this._mz = 123456789;\n  return this._mw = this._seed = seed;\n};\n/**\n * Set and return a random seed.\n */\n\n\nSrand.randomize = Srand.prototype.randomize = function () {\n  return this.seed(1 + Math.floor(Math.random() * 0xffffffff));\n};\n/**\n * Return an object with the state of the generator. Use setState to\n * resume the state.\n */\n\n\nSrand.getState = Srand.prototype.getState = function () {\n  return {\n    seed: this._seed,\n    mz: this._mz,\n    mw: this._mw\n  };\n};\n/**\n * Resume a state previously returned by getState.\n */\n\n\nSrand.setState = Srand.prototype.setState = function (state) {\n  if (state == null || _typeof(state) !== 'object' || typeof state.seed !== 'number' || typeof state.mz !== 'number' || typeof state.mw !== 'number') {\n    throw new Error('Invalid state.');\n  }\n\n  this._seed = state.seed;\n  this._mz = state.mz;\n  this._mw = state.mw;\n};\n/**\n * Return a pseudo-random number between 0 inclusive and 1 exclusive.\n *\n * The algorithm used is MWC (multiply-with-carry) by George Marsaglia.\n *\n * Implementation based on:\n * - http://en.wikipedia.org/wiki/Random_number_generation#Computational_methods\n * - http://stackoverflow.com/questions/521295/javascript-random-seeds#19301306\n */\n\n\nSrand.random = Srand.prototype.random = function () {\n  if (this._seed == null) {\n    this.randomize();\n  }\n\n  var mz = this._mz;\n  var mw = this._mw; // The 16 least significant bits are multiplied by a constant\n  // and then added to the 16 most significant bits. 32 bits result.\n\n  mz = (mz & 0xffff) * 36969 + (mz >> 16) & 0xffffffff;\n  mw = (mw & 0xffff) * 18000 + (mw >> 16) & 0xffffffff;\n  this._mz = mz;\n  this._mw = mw;\n  var x = ((mz << 16) + mw & 0xffffffff) / 0x100000000;\n  return 0.5 + x;\n};\n/**\n * Return a pseudo-random float number between a inclusive and b exclusive.\n */\n\n\nSrand.inRange = Srand.prototype.inRange = function (a, b) {\n  return a + this.random() * (b - a);\n};\n/**\n * Return a psuedo-random integer between min and max inclusive.\n */\n\n\nSrand.intInRange = Srand.prototype.intInRange = function (min, max) {\n  return min + Math.floor(this.random() * (max - min + 1));\n};\n/**\n * Return a random element from the input array.\n *\n * If arr is empty, an exception is thrown.\n */\n\n\nSrand.choice = Srand.prototype.choice = function (arr) {\n  if (arr.length === 0) {\n    throw new Error('Cannot choose random element from empty array.');\n  }\n\n  var randomIndex = this.intInRange(0, arr.length - 1);\n  return arr[randomIndex];\n};\n/**\n * Return a k-sized array sampled with replacement from the input array,\n * i.e. each element can be sampled more than once.\n *\n * If k > 0 and arr is empty, throws an exception.\n */\n\n\nSrand.choices = Srand.prototype.choices = function (arr, k) {\n  var sample = new Array(k);\n\n  for (var i = 0; i < k; i++) {\n    sample[i] = this.choice(arr);\n  }\n\n  return sample;\n};\n/**\n * Return a k-sized array sampled without replacement from the input array.\n *\n * If k > arr.length an exception is thrown.\n */\n\n\nSrand.sample = Srand.prototype.sample = function (arr, k) {\n  if (k > arr.length) {\n    throw new Error('Sample size cannot exceed population size.');\n  }\n\n  if (k === arr.length) {\n    return _toConsumableArray(arr);\n  }\n\n  var maxIndex = arr.length - 1;\n  var sample = new Array(k);\n  var selected = {};\n\n  for (var i = 0, j; i < k; i++) {\n    do {\n      j = this.intInRange(0, maxIndex);\n    } while (selected[j]);\n\n    sample[i] = arr[j];\n    selected[j] = true;\n  }\n\n  return sample;\n};\n/**\n * Shuffle the input array using the Fisher-Yates algorithm and return it\n * (the input array is modified).\n */\n\n\nSrand.shuffle = Srand.prototype.shuffle = function (arr) {\n  for (var i = arr.length - 1; i > 0; i--) {\n    var j = this.intInRange(0, i - 1);\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n\n  return arr;\n}; // Keep flow happy.\n\n\nSrand._oldSrand = undefined;\n\nSrand.noConflict = function () {\n  return Srand;\n};\n\nmodule.exports = Srand;\n\n};"],
"names":["shadow$provide","global","require","module","exports","_arrayLikeToArray","arr","len","length","i","arr2","Array","_typeof","obj","Symbol","iterator","constructor","prototype","Srand","seed","randomize","Srand.prototype.seed","_seed","_mz","_mw","Srand.prototype.randomize","Math","floor","random","getState","Srand.prototype.getState","mz","mw","setState","Srand.prototype.setState","state","Error","Srand.prototype.random","inRange","Srand.prototype.inRange","a","b","intInRange","Srand.prototype.intInRange","min","max","choice","Srand.prototype.choice","randomIndex","choices","Srand.prototype.choices","k","sample","Srand.prototype.sample","isArray","Object","iter","from","o","minLen","n","toString","call","slice","name","test","TypeError","maxIndex","selected","j","shuffle","Srand.prototype.shuffle","temp","_oldSrand","undefined","noConflict","Srand.noConflict"]
}
