{"version":3,"sources":["counterspell/core.cljs"],"mappings":";AAIA,0BAAA,1BAAMA,4DAAOC;AAAb,AAAmB,OAACC,oDAAYC,iBAAOF;;AAKvC,+BAAA,/BAAKG;AACL,8BAAA,9BAAKC;AACL,8BAAA,9BAAKC;AAGL,4CAAA,5CAAMC,gGAAyBC;AAA/B,AACE,eAAA,XAAMC;AAAN,AACE,0DAAA,nDAACC;AAAD,AAAa,OAACC,mBAASF;;;AAE3B,AAAKG,4BAAQ,0CAAA,1CAACL;AAId,uCAAA,vCAAMM;AAAN,AACE,IAAMC,SAAO,CAAGT,8BAAU,gCAAA,/BAAKD;IACzBW,eAAa,AAACC,6CAAK,CAAGF,SAAOR,6BAAWM;AAD9C,gEAEOG,hEACA,OAACE,kDAAUH;;AAGpB,AAAKI,0BAAM,gDAAA,2CAAA,2FAAA,qEAAA,3PAACC,+IAAc,AAACN;AAG3B,kCAAA,lCAAMO,4EAAeC,EAAEC;AAAvB,AACE,6GAAA,mFAAA,8IAAA,vUAACC,0DAAML,wBAAMM,oLAA0BC,oJAAMJ,EAAEC;;AAGjD,gCAAA,hCAAMI,wEAAaL,EAAEC;AAArB,AACED;;AAKF,gCAAA,wCAAAM,xEAAMI;AAAN,AAAA,IAAAH,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;aAAA,AAAAE,4CAAAF,eAAA,pEAA2BI;QAA3B,AAAAF,4CAAAF,eAAA,/DAAkCP;QAAlC,AAAAS,4CAAAF,eAAA,/DAAoCN;AAApC,AACE,IAAMW,mBAAW,iBAAAC,WAAA,mFAAyBb,EAAEC;IAA3Ba,eAAC,iBAAAC,eAAA,AAAAC,gBAAEnB;AAAF,AAAA,QAAAkB,6CAAAA,2CAAA,wEAAAA,wBAAA;;AAAD,AAAA,QAAAD,6CAAAA,2CAAAD,YAAAC,wBAAAD;;IACXI,kBAAgB,WAAKC;AAAL,AACE,oBAAIN;AACF,OAACP,8BAAYL,EAAEC;;AACf,OAACF,gCAAcC,EAAEC;;;AAJ3C,AAAA,0FAAA,kEAAA,2CAAA,2GAAA,nDAKuB,oCAAA,AAAA,SAAA,3BAAMW,8FACHK,wBACvBN;;AAEL,gCAAA,hCAAMQ;AAAN,AAEE,IAAMC,OAAK,AAAA,kFAAA,AAAAJ,gBAAQnB;AAAnB,AAAA,0FAAA,4EAEG,iBAAAwB,qBAAA,sDAAAC;AAAA,AAAA,YAAAC,kBAAA,KAAA;AAAA,AAAA,IAAAD,eAAAA;;AAAA,AAAA,IAAAE,qBAAA,AAAAC,cAAAH;AAAA,AAAA,GAAAE;AAAA,AAAA,IAAAF,eAAAE;AAAA,AAAA,GAAA,AAAAE,6BAAAJ;AAAA,IAAAK,kBA65E8C,AAAA0C,sBAAA/C;IA75E9CM,qBAAA,AAAAC,gBAAAF;IAAAG,WAAA,AAAAC,uBAAAH;AAAA,AAAA,GAAA,AAAA,iBAAAI,WAAA;;AAAA,AAAA,GAAA,CAAAA,WAAAJ;AAAA,IAAAK,aAAA,AAAAC,eAAAP,gBAAAK;QAAA,AAAAG,4CAAAF,WAAA,IAAA,/DAAOjC;UAAP,AAAAmC,4CAAAF,WAAA,IAAA,jEAASY;AAAT,AAAA,AAAA,AAAAT,uBAAAN,SACE,iBAAMgB,UAAQ,AAACnD,6CAAKX,4BAAU6D;AAA9B,AAAA,0FAAA,kEAAA,2CAAA,oDACqB7C,UAClB,iBAAAqB,qBAAA;2EAAA0B;AAAA,AAAA,YAAAxB,kBAAA,KAAA;;AAAA,AAAA,IAAAwB,eAAAA;;AAAA,AAAA,IAAAvB,yBAAA,AAAAC,cAAAsB;AAAA,AAAA,GAAAvB;AAAA,AAAA,IAAAuB,eAAAvB;AAAA,AAAA,GAAA,AAAAE,6BAAAqB;AAAA,IAAApB,sBA05EyC,AAAA0C,sBAAAtB;IA15EzCnB,yBAAA,AAAAC,gBAAAF;IAAAqB,WAAA,AAAAjB,uBAAAH;AAAA,AAAA,GAAA,AAAA,iBAAAqB,WAAA;;AAAA,AAAA,GAAA,CAAAA,WAAArB;AAAA,IAAAsB,aAAA,AAAAhB,eAAAP,oBAAAsB;QAAA,AAAAd,4CAAAe,WAAA,IAAA,/DAAOjD;QAAP,AAAAkC,4CAAAe,WAAA,IAAA,/DAASS;AAAT,AAAA,AAAA,AAAAvB,uBAAAY,SAAA,iHAAA,2CAAA,2DAAA,iDAAA,kDAAA,vOACGtC,kIAAqBiD,iDAAK3D,kDAAKC,sDACb,6CAAK0D,+CAAE3D,+CAAEC;;AAF9B,eAAA,CAAAgD,WAAA;;;;AAAA;;;;;AAAA,OAAAZ,qBAAA,AAAAC,gBAAAU,UAAA,AAAAG,0DAAA,AAAAX,qBAAAO;;AAAA,OAAAV,qBAAA,AAAAC,gBAAAU,UAAA;;;AAAA,IAAAI,aAAA,AAAAV,gBAAAK;QAAA,AAAAZ,4CAAAiB,WAAA,IAAA,/DAAOnD;QAAP,AAAAkC,4CAAAiB,WAAA,IAAA,/DAASO;AAAT,AAAA,OAAAhB,eAAA,iHAAA,2CAAA,2DAAA,iDAAA,kDAAA,4NAAA,AAAAQ,0DAAA,AAAAP,eAAAG,5gBACGrC,kIAAqBiD,iDAAK3D,kDAAKC,sDACb,6CAAK0D,+CAAE3D,+CAAEC;;;AAF9B;;;;;CAAA,KAAA;;;AAAA,AAAA,OAAAoB,mBAAY,AAAC1C,wBAAMmE;;;;AAHxB,eAAA,CAAAd,WAAA;;;;AAAA;;;;;AAAA,OAAAK,qBAAA,AAAAC,gBAAAR,UAAA,AAAAS,4CAAA,AAAAC,qBAAAlB;;AAAA,OAAAe,qBAAA,AAAAC,gBAAAR,UAAA;;;AAAA,IAAAW,aAAA,AAAAC,gBAAApB;QAAA,AAAAa,4CAAAM,WAAA,IAAA,/DAAOzC;UAAP,AAAAmC,4CAAAM,WAAA,IAAA,jEAASI;AAAT,AAAA,OAAAF,eACE,iBAAMG,UAAQ,AAACnD,6CAAKX,4BAAU6D;AAA9B,AAAA,0FAAA,kEAAA,2CAAA,oDACqB7C,UAClB,iBAAAqB,qBAAA;2EAAAgC;AAAA,AAAA,YAAA9B,kBAAA,KAAA;AAAA,AAAA,IAAA8B,eAAAA;;AAAA,AAAA,IAAA7B,yBAAA,AAAAC,cAAA4B;AAAA,AAAA,GAAA7B;AAAA,AAAA,IAAA6B,eAAA7B;AAAA,AAAA,GAAA,AAAAE,6BAAA2B;AAAA,IAAA1B,kBA05EyC,AAAA0C,sBAAAhB;IA15EzCzB,qBAAA,AAAAC,gBAAAF;IAAA2B,WAAA,AAAAvB,uBAAAH;AAAA,AAAA,GAAA,AAAA,iBAAA2B,WAAA;;AAAA,AAAA,GAAA,CAAAA,WAAA3B;AAAA,IAAA4B,aAAA,AAAAtB,eAAAP,gBAAA4B;QAAA,AAAApB,4CAAAqB,WAAA,IAAA,/DAAOvD;QAAP,AAAAkC,4CAAAqB,WAAA,IAAA,/DAASG;AAAT,AAAA,AAAA,AAAAvB,uBAAAkB,SAAA,iHAAA,2CAAA,2DAAA,iDAAA,kDAAA,vOACG5C,kIAAqBiD,iDAAK3D,kDAAKC,sDACb,6CAAK0D,+CAAE3D,+CAAEC;;AAF9B,eAAA,CAAAsD,WAAA;;;;AAAA;;;;;AAAA,OAAAlB,qBAAA,AAAAC,gBAAAgB,UAAA,AAAAG,0DAAA,AAAAjB,qBAAAa;;AAAA,OAAAhB,qBAAA,AAAAC,gBAAAgB,UAAA;;;AAAA,IAAAI,aAAA,AAAAhB,gBAAAW;QAAA,AAAAlB,4CAAAuB,WAAA,IAAA,/DAAOzD;QAAP,AAAAkC,4CAAAuB,WAAA,IAAA,/DAASC;AAAT,AAAA,OAAAhB,eAAA,iHAAA,2CAAA,2DAAA,iDAAA,kDAAA,4NAAA,AAAAc,0DAAA,AAAAb,eAAAS,5gBACG3C,kIAAqBiD,iDAAK3D,kDAAKC,sDACb,6CAAK0D,+CAAE3D,+CAAEC;;;AAF9B;;;;GAAA,KAAA;;;AAAA,AAAA,OAAAoB,mBAAY,AAAC1C,wBAAMmE;;KAHxB,AAAAP,4CAAA,AAAAK,eAAAtB;;;AAAA;;;;GAAA,KAAA;;AAAA,AAAA,OAAAD,mBAAc,AAAC1C,wBAAMyC;;;AAO1B,yBAAA,zBAAMwC;AAAN,AAAA,0FAAA,mDAAA,mFAAA,kDAAA,0BAAA,mFAGIzC;;AAEJ,GAAA,QAAA0C,yCAAAC,8CAAAC;AAAA;AAAA,AAAA,AAASC,yBAAK,AAACC,+BAAiB,uBAAA,vBAAgBC;;AAEhD,yBAAA,zBAEEC;AAFF,AAIE,sFAAA,/EAACC,wDAAYJ,0GAAMJ","names":["counterspell.core/index","coll","cljs.core.map_indexed","cljs.core/vector","counterspell.core/game-turns","counterspell.core/grid-rows","counterspell.core/grid-cols","counterspell.core/create-letter-generator","seed","alphabet","cljs.core.repeatedly","cljs.core/rand-nth","counterspell.core/letters","counterspell.core/generate-game-grid","height","flat-letters","cljs.core.take","cljs.core.partition","counterspell.core/state","reagent.core.atom","counterspell.core/activate-tile","x","y","cljs.core.swap_BANG_","cljs.core/update-in","cljs.core/conj","counterspell.core/delete-tile","p__21009","map__21010","cljs.core/--destructure-map","cljs.core.get","counterspell.core/letter-tile","letter","activated?","G__21013","fexpr__21012","fexpr__21014","cljs.core/deref","on-click-letter","evt","counterspell.core/letter-grid","grid","iter__5480__auto__","s__21016","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5478__auto__","size__5479__auto__","cljs.core/count","b__21018","cljs.core/chunk-buffer","i__21017","vec__21019","cljs.core/-nth","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__21015","cljs.core/chunk-rest","vec__21032","cljs.core/first","cljs.core/cons","cljs.core/rest","col","letters","s__21023","b__21025","i__21024","vec__21026","iter__21022","vec__21029","s__21036","b__21038","i__21037","vec__21039","iter__21035","vec__21042","l","counterspell.core/main","js/counterspell","js/counterspell.core","js/counterspell.core.root","counterspell.core/root","reagent.dom.client/create-root","js/document","counterspell.core/init","reagent.dom.client.render","cljs.core/chunk-first"],"sourcesContent":["(ns counterspell.core\n  (:require [reagent.dom.client :as rdom]\n            [reagent.core :as r]))\n\n(defn index [coll] (map-indexed vector coll))\n\n\n;; TODO: how many turns should the game be?\n;; TODO: how big should the grid be?\n(def game-turns 3)\n(def grid-rows 5)\n(def grid-cols 4)\n\n;; TODO: figure out how to get seeds working\n(defn create-letter-generator [seed]\n  (let [alphabet \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"]\n    (repeatedly #(rand-nth alphabet))))\n\n(def letters (create-letter-generator nil))\n\n;; Gives us columns as a list of lists of letters\n;; We'll render the columns bottom to top; that is, first item is lowest of the screen.\n(defn generate-game-grid []\n  (let [height (* grid-rows (inc game-turns))\n        flat-letters (take (* height grid-cols) letters)]\n    (->> flat-letters\n         (partition height))))\n\n\n(def state (r/atom {:grid (generate-game-grid)\n                    :active-tiles #{}}))\n\n(defn activate-tile [x y]\n  (swap! state update-in [:active-tiles] conj [x y]))\n\n;; TODO: put a fade animation in between the click and the actual data delete\n(defn delete-tile [x y]\n  x)\n\n;;\n;; ui components\n;;\n(defn letter-tile [{:keys [letter x y]}]\n  (let [activated? ((@state :active-tiles) [x y])\n        on-click-letter (fn [evt]\n                          (if activated?\n                            (delete-tile x y)\n                            (activate-tile x y)))]\n    [:div.letter {:class (when activated? \"active\")\n                  :on-click on-click-letter}\n     letter]))\n\n(defn letter-grid []\n  ;; TODO: the grid probably wants to be a ratom\n  (let [grid (:grid @state)]\n    [:div.letter-grid\n     (for [[x col] (index grid)]\n       (let [letters (take grid-rows col)]\n         [:div.column {:key x}\n          (for [[y l] (index letters)]\n            [letter-tile {:letter l :x x :y y\n                          :key (str l x y)}])]))]))\n\n(defn main []\n  [:div\n   [:h1 \"Counterspell!!!\"]\n   [letter-grid]])\n\n(defonce root (rdom/create-root (.querySelector js/document \"#root\")))\n\n(defn\n  ^:dev/after-load\n  init\n  []\n  (rdom/render root [main]))\n"]}